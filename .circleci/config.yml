version: 2
jobs:
  build:
    docker:
      - image: circleci/node:11.0-browsers

    working_directory: ~/repo

    environment:
      CC_TEST_REPORTER_ID: 09d9641bc46aa146a53d8dc6a1b94b113ebef20db13cec2f4fd2aee04e0e5f24

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: yarn install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      - run:
          name: Setup dependencies
          command: |
            sudo composer self-update
            composer install -n --prefer-dist
      - run:
          name: Setup Code Climate test-reporter
          command: |
            # download test reporter as a static binary
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter
      - run:
          name: Run tests
          command: |
            sudo docker-php-ext-enable xdebug
            # notify Code Climate of a pending test report using `before-build`
            ./cc-test-reporter before-build
            sudo vendor/bin/phpunit --coverage-clover clover.xml
            # upload test report to Code Climate using `after-build`
            ./cc-test-reporter after-build --coverage-input-type clover --exit-code $?

      - run:
          name: Install PIP
          command: sudo apt-get install python-pip python-dev

      - run:
          name: Install awscli
          command: sudo pip install awscli

      - run:
          name: validate cloudformation template
          command: |
            aws cloudformation validate-template \
              --template-body file://template.yml \
              --region us-east-1

      - run:
          name: build
          command: npm run build

      - run:
          name: lint
          command: npm run lint

      - run:
          name: test
          command: yarn test

      - run:
          name: cover
          command: npm run cover

      # FIXME: this is currently failing
      # - run:
      #     name: end to end testing
      #     command: npm run test:e2e
      
      - run:
          name: deploy infrastructure
          command: |
            if [ "${CIRCLE_BRANCH}" = "master" ]; then
              aws cloudformation update-stack \
                --stack-name cuffney-com \
                --template-body file://template.yml
            # elif [ "${CIRCLE_BRANCH}" = "dev" ]; then
            #   aws cloudformation update-stack \
            #     --stack-name cuffney-com \
            #     --template-body file://template.yml
            else
              echo "Not master branch, dry run only"
            fi

      - deploy:
          name: deploy
          command: |
            if [ "${CIRCLE_BRANCH}" = "master" ]; then
              aws s3 sync ./build s3://cuffney.com --delete
            # elif [ "${CIRCLE_BRANCH}" = "dev" ]; then
            #   aws s3 sync ./build s3://dev.cuffney.com --delete
            else
              echo "Not master branch, dry run only"
            fi

      - deploy:
          name: Create CloudFront Invalidation
          command: |
            if [ "${CIRCLE_BRANCH}" = "master" ]; then
              aws cloudfront create-invalidation \
                --distribution-id $CLOUDFRONT_DISTRIBUTION_ID \
                --paths "/*"
            # elif [ "${CIRCLE_BRANCH}" = "dev" ]; then 
            #   aws cloudfront create-invalidation \
            #     --distribution-id $DEV_CLOUDFRONT_DISTRIBUTION_ID \
            #     --paths "/*"
            else
              echo "Not master branch, dry run only"
            fi
